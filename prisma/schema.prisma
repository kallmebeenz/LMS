// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

// Course has a many-to-one relationship with Category.
// Course has a one-to-many relationship with Attachment.
// Course has a one-to-many relationship with Chapter.
// Course has a one-to-many relationship with Purchase.


model Course {
  id          String  @id @default(uuid())
  userId      String?
  title       String  @db.Text
  description String? @db.Text
  imageUrl    String? @db.Text
  price       Float?
  totalRating Float?  @default(0)
  isPublished Boolean @default(false)

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  
  attachments   Attachment[]
  
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@fulltext([title, description])
}


// Category has a one-to-many relationship with Course  

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

// Attachment has a many-to-one relationship with Cours 

model Attachment {
  id   String @id @default(uuid())
  name String
  url  String @db.Text

 courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}



